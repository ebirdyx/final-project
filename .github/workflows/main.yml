name: Build docker images

on:
  push:
    branches: [ "main" ]

env:
  CART_SERVICE_DOCKERFILE: services/Cart/Cart/Dockerfile
  CART_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_cart:${{ github.sha }}
  CATALOG_SERVICE_DOCKERFILE: services/Catalog/Catalog/Dockerfile
  CATALOG_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_catalog:${{ github.sha }}
  DISCOUNT_SERVICE_DOCKERFILE: services/Discount/Discount.gRPC/Dockerfile
  DISCOUNT_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_discount:${{ github.sha }}
  ORDERS_SERVICE_DOCKERFILE: services/Orders/Orders.REST/Dockerfile
  ORDERS_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_orders:${{ github.sha }}
  WEBUI_SERVICE_DOCKERFILE: services/WebUI/WebUI/Dockerfile
  WEBUI_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_webui:${{ github.sha }}

jobs:

  build-and-push:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Docker login to azure container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & push Cart Service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.CART_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.CART_SERVICE_IMAGE_NAME }}
          
      - name: Build & push Catalog Service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.CATALOG_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.CATALOG_SERVICE_IMAGE_NAME }}
          
      - name: Build & push Discount Service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.DISCOUNT_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.DISCOUNT_SERVICE_IMAGE_NAME }}
          
      - name: Build & push Orders Service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.ORDERS_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.ORDERS_SERVICE_IMAGE_NAME }}

      - name: Build & push WebUI
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.WEBUI_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.WEBUI_SERVICE_IMAGE_NAME }}
          
  deploy-infrastructure:
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: azure/setup-kubectl@v2.0
 
      - uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - uses: azure/aks-set-context@v2
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - uses: azure/k8s-create-secret@v2
        with:
          namespace: default
          secret-name: final-project-secrets
          string-data: >-
            {"MONGO_DB_USER": "${{ secrets.MONGO_DB_USER }}",
            "MONGO_DB_PASSWORD": "${{ secrets.MONGO_DB_PASSWORD }}",
            "MONGO_DB_CONN_STRING": "${{ secrets.MONGO_DB_CONN_STRING }}",
            "REDIS_PASSWORD": "${{ secrets.REDIS_PASSWORD }}",
            "POSTGRES_USER": "${{ secrets.POSTGRES_USER }}",
            "POSTGRES_PASSWORD": "${{ secrets.POSTGRES_PASSWORD }}",
            "POSTGRES_CONN_STRING": "${{ secrets.POSTGRES_CONN_STRING }}",
            "MSSQL_CONN_STRING": "${{ secrets.MSSQL_CONN_STRING }}",
            "PG_ADMIN_EMAIL": "${{ secrets.PG_ADMIN_EMAIL }}",
            "PG_ADMIN_PASSWORD": "${{ secrets.PG_ADMIN_PASSWORD }}",
            "RABBITMQ_USER": "${{ secrets.RABBITMQ_USER }}",
            "RABBITMQ_PASS": "${{ secrets.RABBITMQ_PASS }}",
            "RABBITMQ_CONN_STRING": "${{ secrets.RABBITMQ_CONN_STRING }}",
            "AUTH0_DOMAIN": "${{ secrets.AUTH0_DOMAIN }}",
            "AUTH0_CLIENT_ID": "${{ secrets.AUTH0_CLIENT_ID }}",
            "ASPNETCORE_ENVIRONMENT": "Development"}

      - name: Deploy Redis
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/redis/deployment.yml
            
      - name: Deploy Mongo
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/mongo/deployment.yml
            
      - name: Deploy Postgres
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/postgres/deployment.yml
          
      - name: Deploy RabbitMQ
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/rabbitmq/deployment.yml
          
  deploy-microservices:
    
    needs:
      - build-and-push
      - deploy-infrastructure

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
 
      - uses: azure/setup-kubectl@v2.0

      - uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - uses: azure/aks-set-context@v2
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy Discount
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/discount/deployment.yml
          images: ${{ env.DISCOUNT_SERVICE_IMAGE_NAME }}

      - name: Deploy Cart service
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/cart/deployment.yml
          images: ${{ env.CART_SERVICE_IMAGE_NAME }}
          
      - name: Deploy Catalog
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/catalog/deployment.yml
          images: ${{ env.CATALOG_SERVICE_IMAGE_NAME }}
          
      - name: Deploy Orders
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/orders/deployment.yml
          images: ${{ env.ORDERS_SERVICE_IMAGE_NAME }}

      - name: Deploy WebUI
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/webui/deployment.yml
          images: ${{ env.WEBUI_SERVICE_IMAGE_NAME }}
          
      - name: Deploy Ingress
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: k8s/ingress/deployment.yml
