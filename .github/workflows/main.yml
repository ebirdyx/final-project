name: Build docker images

on:
  push:
    branches: [ "main" ]

env:
  CART_SERVICE_DOCKERFILE: services/Cart/Cart/Dockerfile
  CART_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_cart:${{ github.sha }}
  CATALOG_SERVICE_DOCKERFILE: services/Catalog/Catalog/Dockerfile
  CATALOG_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_catalog:${{ github.sha }}
  DISCOUNT_SERVICE_DOCKERFILE: services/Discount/Discount.gRPC/Dockerfile
  DISCOUNT_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_discount:${{ github.sha }}
  ORDERS_SERVICE_DOCKERFILE: services/Orders/Orders.REST/Dockerfile
  ORDERS_SERVICE_IMAGE_NAME: ${{ secrets.ACR_SERVER }}/final_project_orders:${{ github.sha }}

jobs:

  build-and-push:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Docker login to azure container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & push Cart Service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.CART_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.CART_SERVICE_IMAGE_NAME }}
          
      - name: Build & push Catalog Service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.CATALOG_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.CATALOG_SERVICE_IMAGE_NAME }}
          
      - name: Build & push Discount Service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.DISCOUNT_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.DISCOUNT_SERVICE_IMAGE_NAME }}
          
      - name: Build & push Orders Service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.ORDERS_SERVICE_DOCKERFILE }}
          push: true
          tags: ${{ env.ORDERS_SERVICE_IMAGE_NAME }}
          
  deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: azure/setup-kubectl@v2.0
 
      - uses: azure/login@v1
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/aks-set-context@v2
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - uses: azure/k8s-create-secret@v2
        with:
          namespace: default
          secret-name: final-project-secrets
          string-data: |
            MONGO_DB_USER: ${{ secrets.MONGO_DB_USER }}
            MONGO_DB_PASSWORD: ${{ secrets.MONGO_DB_PASSWORD }}
            REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            SQL_SERVER_USER: ${{ secrets.SQL_SERVER_USER }}
            SQL_SERVER_PASS: ${{ secrets.SQL_SERVER_PASS }}
            PG_ADMIN_EMAIL: ${{ secrets.PG_ADMIN_EMAIL }}
            PG_ADMIN_PASSWORD: ${{ secrets.PG_ADMIN_PASSWORD }}

      - name: Deploy infrastructure services
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          namespace: default
          manifests: |
            k8s/mongo/deployment.yml
            k8s/postgres/deployment.yml
            k8s/redis/deployment.yml